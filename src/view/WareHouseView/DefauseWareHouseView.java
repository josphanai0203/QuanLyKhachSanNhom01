package view.WareHouseView;

import dao.WareHouseDAO;
import model.WareHouse;

import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import java.util.ArrayList;
import java.util.Vector;

public class DefauseWareHouseView extends javax.swing.JPanel {

    private static WareHouse warehouseSelect;
    private ArrayList<WareHouse> list;
    private WareHouseDAO wd = new WareHouseDAO();

    public DefauseWareHouseView(int num) {

    }


    public DefauseWareHouseView() {
        initComponents();
        WareHouseDAO id = new WareHouseDAO();
        list = id.selectAll();
        setTableWareHouse();
    }

    private void setTableWareHouse() {
        DefaultTableModel dtm = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false
                return false;
            }
        };
        wareTable.setModel(dtm);
        ListSelectionModel lsm = wareTable.getSelectionModel();
        lsm.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lsm.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                createWareHouse();
            }
        });
        setColumnName(dtm);
        setColumnWidths(wareTable, 200, 200, 400, 100, 200, 100, 200);
        setRow(dtm);
    }

    private void setColumnName(DefaultTableModel dtm) {
        dtm.addColumn("Mã Kho Hàng");
        dtm.addColumn("Tên sản Phẩm");
        dtm.addColumn("Ngày Nhập");
        dtm.addColumn("Số Lượng");
        dtm.addColumn("Giá Nhập");
        dtm.addColumn("Giá Bán");
        dtm.addColumn("Hạn Sử Dụng");
    }

    public void setColumnWidths(JTable table, int... widths) {
        TableColumnModel columnModel = table.getColumnModel();
        for (int i = 0; i < widths.length; i++) {
            if (i < columnModel.getColumnCount()) {
                columnModel.getColumn(i).setMaxWidth(widths[i]);
            } else {
                break;
            }
        }
    }

    public void setRow(DefaultTableModel dfm) {
        Vector v = null;
        for (WareHouse c : list) {
            v = new Vector();
            v.removeAllElements();
            v.add(c.getMaW());
            v.add(c.getnameW());
            v.add(c.getDayIn());
            v.add(c.getQuantity());
            v.add(c.getPriceIn());
            v.add(c.getPriceOut());
            v.add(c.gethSD());
            dfm.addRow(v);
        }

    }

    public void createWareHouse() {
        int row = wareTable.getSelectedRow();
        int maKhoHang = (Integer) wareTable.getValueAt(row, 0);
        warehouseSelect = new WareHouse();
        warehouseSelect.setMaW(maKhoHang);
    }

    public static WareHouse getWarehouseSelect() {
        return warehouseSelect;
    }

    public static void setNullSelect() {
        warehouseSelect = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        wareTable = new javax.swing.JTable();


        wareTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null}
                },
                new String[]{
                        "Title 1", "Title 2", "Title 3", "Title 4"
                }
        ));
        jScrollPane1.setViewportView(wareTable);
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1086, Short.MAX_VALUE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 695, Short.MAX_VALUE)
                                .addGap(15, 15, 15))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;

    private javax.swing.JTable wareTable;
    // End of variables declaration//GEN-END:variables
}
