/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.roomView;

import controller.RoomService;
import java.awt.Color;
import java.util.ArrayList;
import model.Room;
import util.Validate;

/**
 *
 * @author Admin
 */
public class AddRoomView extends javax.swing.JPanel {

    private RoomService rs = new RoomService();
    private Room roomfix;

    public AddRoomView() {
        initComponents();

    }

    public AddRoomView(int nul) {
        roomfix = rs.findById(DefaultRoomView.getRoomSelected());
        initComponents();
        header.setText("Sửa Phòng");
        addRoomBtn.setText("Sửa Thông Tin");
        roomName.setText(roomfix.getName());
        roomArea.setText(String.valueOf(roomfix.getArea()));
        roomType.setSelectedItem((Object) roomfix.getRoomType());
    }

    ;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        header = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        roomName = new javax.swing.JTextField();
        roomArea = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        roomType = new javax.swing.JComboBox<>();
        addRoomBtn = new javax.swing.JButton();
        messInfo = new javax.swing.JLabel();
        error1 = new javax.swing.JLabel();
        error2 = new javax.swing.JLabel();
        error3 = new javax.swing.JLabel();

        header.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        header.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        header.setText("Tạo Phòng Mới");

        jLabel2.setText("Tên Phòng");

        jLabel3.setText("Diện Tích");

        jLabel4.setText("Loại Phòng");

        roomType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Phòng Thường", "Phòng Vip", "Phòng Tổng Thống" }));
        roomType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomTypeActionPerformed(evt);
            }
        });

        addRoomBtn.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        addRoomBtn.setText("Tạo");
        addRoomBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRoomBtnActionPerformed(evt);
            }
        });

        messInfo.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        messInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(addRoomBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(428, 428, 428)
                                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(error1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(roomName, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(roomArea, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(roomType, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(error2, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(error3, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(messInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(259, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(header)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roomName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(error1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(error2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roomType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(error3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(addRoomBtn)
                .addGap(73, 73, 73)
                .addComponent(messInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(260, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void roomTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomTypeActionPerformed

    private void addRoomBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRoomBtnActionPerformed
        if (addRoomBtn.getText() == "Tạo") {
            addRoom();
        } else {
            fixRoom();
        }

    }//GEN-LAST:event_addRoomBtnActionPerformed
    private void config() {
        error1.setText("");
        error2.setText("");
        error3.setText("");

    }

    private void fixRoom() {
        boolean check = validateRoom();
        if (check) {
            String name = roomName.getText();
            double area = Double.parseDouble(roomArea.getText());
            String type = (String) roomType.getSelectedItem();
            check = rs.update(new Room(roomfix.getId_room(), name, area, type, false));
            if (check) {
                messInfo.setForeground(new Color(13, 110, 253));
                messInfo.setText("Sửa Phòng Thành Công");
            } else {
                messInfo.setForeground(new Color(255, 0, 0));
                messInfo.setText("Sửa Phòng Thất Bại");
            }

        }
    }

    private boolean validateRoom() {
        config();
        ArrayList<Integer> t1 = Validate.checkMutiLine("empty", roomName.getText(), roomArea.getText());
        ArrayList<Integer> t2 = Validate.checkMutiLine("isNumber", roomArea.getText());
        if (!t1.isEmpty()) {
            callMessErrorEmpty(t1);
            return false;
        } else if (!t2.isEmpty()) {
            callMessErrorNumber(t2);
            return false;
        } else {
            return true;
        }
    }

    private void addRoom() {
        boolean check = validateRoom();
        if (check) {
            String name = roomName.getText();
            if (rs.testName(name)) {
                error1.setForeground(new Color(255, 0, 0));
                error1.setText("Tên Phòng đã tồn tại");
            } else {

                double area = Double.parseDouble(roomArea.getText());
                String type = (String) roomType.getSelectedItem();
                int id = convertToId(type);
                check = rs.add(new Room(id, name, area, type, false));
                if (check) {
                    messInfo.setForeground(new Color(13, 110, 253));
                    messInfo.setText("Thêm Phòng Thành Công");
                    reset();
                } else {
                    messInfo.setForeground(new Color(255, 0, 0));
                    messInfo.setText("Thêm Phòng Thất Bại");
                }
            }
        }
    }
    public void reset(){
        roomName.setText("");
        roomArea.setText("");
        roomType.setSelectedIndex(0);
    }
    private void callMessErrorEmpty(ArrayList<Integer> idError) {
        for (Integer i : idError) {

            switch (i) {
                case 1:
                    error1.setForeground(new Color(255, 0, 0));
                    error1.setText("Vui lòng Nhập Trường Này");
                    break;
                case 2:
                    error2.setForeground(new Color(255, 0, 0));
                    error2.setText("Vui lòng Nhập Trường Này");
                    break;
                case 3:
                    error3.setForeground(new Color(255, 0, 0));
                    error3.setText("Vui lòng Nhập Trường Này");
                    break;
                default:
                    break;
            }
        }

    }

    private void callMessErrorNumber(ArrayList<Integer> idError) {
        for (Integer i : idError) {

            switch (i) {
                case 1:
                    error2.setForeground(new Color(255, 0, 0));
                    error2.setText("Vui lòng Chỉ Nhập Số");
                    break;
                default:
                    break;
            }
        }

    }

    private int convertToId(String type) {
        switch (type) {
            case "Phòng Thường":
                return 1;
            case "Phòng Vip":
                return 2;
            case "Phòng Tổng Thống":
                return 3;
            default:
                throw new AssertionError();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addRoomBtn;
    private javax.swing.JLabel error1;
    private javax.swing.JLabel error2;
    private javax.swing.JLabel error3;
    private javax.swing.JLabel header;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel messInfo;
    private javax.swing.JTextField roomArea;
    private javax.swing.JTextField roomName;
    private javax.swing.JComboBox<String> roomType;
    // End of variables declaration//GEN-END:variables
}
